// File: adc.v
// Generated by MyHDL 0.11
// Date: Tue May 24 09:00:06 2022


`timescale 1ns/10ps

module adc (
    clk,
    go,
    valid,
    cmp,
    value,
    sample,
    result,
    mask
);


input [1:0] clk;
input [1:0] go;
output [1:0] valid;
reg [1:0] valid;
input [1:0] cmp;
output [7:0] value;
reg [7:0] value;
output [1:0] sample;
reg [1:0] sample;
output [7:0] result;
reg [7:0] result;
output [7:0] mask;
reg [7:0] mask;

reg [1:0] state_next;

parameter sWait=0, sSetup=1, sConv=2, sDone=3;

always @(*) begin: ADC_LOGIC
    if ((!go)) begin
        state_next <= sWait;
    end
    case (state_next)
        sWait: begin
            state_next <= sSetup;
        end
        sSetup: begin
            state_next <= sConv;
            mask <= 8'b10000000;
            result <= 8'b0;
        end
        sConv: begin
            if (cmp) begin
                result <= (result | mask);
            end
            mask <= (mask >>> 1);
            if (mask[0])
            state_next <= sDone;
        end
        sDone: begin
            if ((result == value)) begin
                valid <= 1;
            end
        end
    endcase

    valid <= (state_next == sDone);
    value <= (result | mask);
    sample <= (state_next == sSetup);
end

endmodule
