// File: amplificador_full.v
// Generated by MyHDL 0.11
// Date: Sat May 28 20:20:50 2022


`timescale 1ns/10ps

module amplificador_full (
    clk,
    go,
    valid,
    cmp,
    value,
    sample,
    result,
    mask,
    gain,
    output_amp
);


input [1:0] clk;
input [1:0] go;
output [1:0] valid;
reg [1:0] valid;
input [1:0] cmp;
output [7:0] value;
reg [7:0] value;
output [1:0] sample;
reg [1:0] sample;
output [7:0] result;
reg [7:0] result;
output [7:0] mask;
reg [7:0] mask;
input [3:0] gain;
output [7:0] output_amp;
reg [7:0] output_amp;
reg [1:0] state_next;



always @(*) begin: AMPLIFICADOR_FULL_LOGIC
    if ((!go)) begin
        state_next <= 2'b00;
    end
    case (state_next)
        2'b00: begin
            state_next <= 2'b01;
        end
        2'b01: begin
            state_next <= 2'b10;
            mask <= 8'h80;
            result <= 8'h0;
        end
        2'b10: begin
            if (cmp) begin
                result <= (result | mask);
            end
            mask <= (mask >>> 1);
            if ((mask == 0)) begin
                state_next <= 2'b11;
            end
        end
        default: begin
            if ((state_next == 2'b11)) begin
                if ((result == value)) begin
                    valid <= 1;
                    output_amp <= value * gain;
                end
            end
        end
    endcase
    valid <= (state_next == 2'b11);
    value <= (result | mask);
    sample <= (state_next == 2'b01);
end

endmodule
